const {
  expect
} = require('chai');

const oaStruct = require('./oa_struct.js');
require('./heap.js');

const {
  pushHeap,
  popHeap
} = oaStruct.get('heap');

describe('heap.js', function() {

describe('Heap', function() {
  it('test1', function() {
    let heap = [], comp = (a,b) => a < b;
    pushHeap(heap, 6, comp);
    expect(heap).to.deep.equal([6]);
    pushHeap(heap, 3, comp);
    expect(heap).to.deep.equal([3, 6]);
    pushHeap(heap, 4, comp);
    expect(heap).to.deep.equal([3, 6, 4]);
    pushHeap(heap, 7, comp);
    expect(heap).to.deep.equal([3, 6, 4, 7]);
    pushHeap(heap, 5, comp);
    expect(heap).to.deep.equal([3, 5, 4, 7, 6]);
    expect(popHeap(heap, comp)).to.equal(3);
    expect(heap).to.deep.equal([4, 5, 6, 7]);
    pushHeap(heap, 1, comp);
    expect(heap).to.deep.equal([1, 4, 6, 7, 5]);
    pushHeap(heap, 3, comp);
    expect(heap).to.deep.equal([1, 4, 3, 7, 5, 6]);
    pushHeap(heap, 5, comp);
    expect(heap).to.deep.equal([1, 4, 3, 7, 5, 6, 5]);
    expect(popHeap(heap, comp)).to.equal(1);
    expect(heap).to.deep.equal([3, 4, 5, 7, 5, 6]);
    expect(popHeap(heap, comp)).to.equal(3);
    expect(heap).to.deep.equal([4, 5, 5, 7, 6]);
  });
});

});
